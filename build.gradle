buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.moowork.node" version "1.3.1"
    id "nebula.lint" version "16.8.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'ua.darksoul.testprojects'
version = '1.0.0'
sourceCompatibility = '11'

/*task buildFront(type: YarnTask) {
    args = ['build']
}

yarn_install.dependsOn(yarn_cache_clean)
buildFront.dependsOn(yarn_install)
processResources.dependsOn(buildFront)*/

repositories {
    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.3.RELEASE')
    implementation('org.springframework.session:spring-session-jdbc')

    implementation('org.postgresql:postgresql')
    implementation('javax.xml.bind:jaxb-api')
    implementation('com.sun.xml.bind:jaxb-core')
    implementation('com.sun.xml.bind:jaxb-impl')
    implementation('org.projectlombok:lombok')
    implementation('org.jsoup:jsoup:1.11.3')
    implementation 'io.sentry:sentry-spring-boot-starter:4.3.0'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    runtime('org.springframework.boot:spring-boot-devtools')
}
